<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>isoldier</title>
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://yoursite.com/"/>
  <updated>2016-11-25T15:07:58.967Z</updated>
  <id>http://yoursite.com/</id>
  
  <author>
    <name>isoldier</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>iptaables基础</title>
    <link href="http://yoursite.com/2016/11/25/iptaables%E5%9F%BA%E7%A1%80/"/>
    <id>http://yoursite.com/2016/11/25/iptaables基础/</id>
    <published>2016-11-25T15:06:19.000Z</published>
    <updated>2016-11-25T15:07:58.967Z</updated>
    
    <content type="html"><![CDATA[<h2 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h2><h3 id="介绍"><a href="#介绍" class="headerlink" title="介绍"></a>介绍</h3><p>iptables是Linux内核默认的防火墙。防火墙，其实说白了讲，就是用于实现Linux下访问控制的功能的，它分为硬件的或者软件的防火墙两种。无论是在哪个网络中，防火墙工作的地方一定是在网络的边缘。而我们的任务就是需要去定义到底防火墙如何工作，这就是防火墙的策略，规则，以达到让它对出入网络的IP、数据进行检测。</p>
<p>对于TCP/IP的七层模型来讲，我们知道第三层是网络层，三层的防火墙会在这层对源地址和目标地址进行检测。</p>
<p>iptables在内核空间中的五个位置发生作用：</p>
<ol>
<li>内核空间中：从一个网络接口进来，到另一个网络接口去的</li>
<li>数据包从内核流入用户空间的</li>
<li>数据包从用户空间流出的</li>
<li>进入/离开本机的外网接口</li>
<li>进入/离开本机的内网接口</li>
</ol>
<p>这五个位置也被称为五个钩子函数（hook functions）,也叫五个规则链。</p>
<ol>
<li>PREROUTING (路由前)</li>
<li>INPUT (数据包流入口)</li>
<li>FORWARD (转发管卡)</li>
<li>OUTPUT(数据包出口)</li>
<li>POSTROUTING（路由后）</li>
</ol>
<h3 id="原理图"><a href="#原理图" class="headerlink" title="原理图"></a>原理图</h3><p><img src="http://ww2.sinaimg.cn/large/97be9d10gw1f6xsxzzupnj20b507pgm4.jpg" alt=""></p>
<h3 id="用法"><a href="#用法" class="headerlink" title="用法"></a>用法</h3><p><strong>格式：iptables [-t table] COMMAND chain CRETIRIA -j ACTION</strong></p>
<p>iptables [ -t 表名] 命令选项 [链名] [条件匹配] [-j 处理方式]<br>1、表名和链名即为上述四张表、5条链<br>2、常用的命令选项如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div></pre></td><td class="code"><pre><div class="line">-A    在指定链的末尾添加（--append）一条新的规则</div><div class="line">-I    在指定链中插入（--insert）一条新的规则，默认在链的开头插入</div><div class="line">-</div><div class="line">-D    删除（--delete）指定链中的某一条规则，按规则序号或内容确定要删除的规则</div><div class="line">-</div><div class="line">-L    列出（--list）指定链中的所有的规则进行查看，默认列出表中所有链的内容</div><div class="line">-F    清空（--flush）指定链中的所有规则，默认清空表中所有链的内容</div><div class="line">-</div><div class="line">-n    用数字形式（--numeric）显示输出结果，显示主机的 IP地址而不是主机名</div><div class="line">-</div><div class="line">-h    查看命令帮助信息（--help）</div></pre></td></tr></table></figure></p>
<p>3、条件匹配分为基本匹配和扩展匹配，常用的基本匹配参数如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div></pre></td><td class="code"><pre><div class="line">-p    指定规则协议，如tcp, udp,icmp等，可以使用all来指定所有协议</div><div class="line">-s    指定数据包的源地址参数，可以使IP地址、网络地址、主机名</div><div class="line">-d    指定目的地址</div><div class="line">-i    输入接口</div><div class="line">-o    输出接口</div></pre></td></tr></table></figure></p>
<p>4、常用的处理方式如下<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div></pre></td><td class="code"><pre><div class="line">ACCEPT：允许数据包通过。</div><div class="line">DROP：直接丢弃数据包，不给出任何回应信息。</div><div class="line">REJECT：拒绝数据包通过，必须时会给数据发送端一个响应信息。</div></pre></td></tr></table></figure></p>
<p>\</p>
<h4 id="禁止客户机访问不健康网站"><a href="#禁止客户机访问不健康网站" class="headerlink" title="禁止客户机访问不健康网站"></a>禁止客户机访问不健康网站</h4><p>【例1】添加iptables规则禁止用户访问域名为www.sexy.com的网站。</p>
<p>iptables -I FORWARD -d www.sexy.com -j DROP</p>
<p>【例2】添加iptables规则禁止用户访问IP地址为20.20.20.20的网站。</p>
<p>iptables -I FORWARD -d 20.20.20.20 -j DROP</p>
<h4 id="禁止某些客户机上网"><a href="#禁止某些客户机上网" class="headerlink" title="禁止某些客户机上网"></a>禁止某些客户机上网</h4><p>【例1】添加iptables规则禁止IP地址为192.168.1.X的客户机上网。</p>
<p>iptables -I FORWARD -s 192.168.1.X -j DROP</p>
<p>【例2】添加iptables规则禁止192.168.1.0子网里所有的客户机上网。</p>
<p>iptables -I FORWARD -s 192.168.1.0/24 -j DROP</p>
<h4 id="禁止访问11-12-13-14地址"><a href="#禁止访问11-12-13-14地址" class="headerlink" title="禁止访问11.12.13.14地址"></a>禁止访问11.12.13.14地址</h4><p>iptables -A OUTPUT -d 11.12.13.14 -j DROP</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;iptables&quot;&gt;&lt;a href=&quot;#iptables&quot; class=&quot;headerlink&quot; title=&quot;iptables&quot;&gt;&lt;/a&gt;iptables&lt;/h2&gt;&lt;h3 id=&quot;介绍&quot;&gt;&lt;a href=&quot;#介绍&quot; class=&quot;headerlink&quot; titl
    
    </summary>
    
      <category term="网络" scheme="http://yoursite.com/categories/%E7%BD%91%E7%BB%9C/"/>
    
    
  </entry>
  
  <entry>
    <title>dubbo之addShutdownHook</title>
    <link href="http://yoursite.com/2016/11/19/dubbo%E4%B9%8BaddShutdownHook/"/>
    <id>http://yoursite.com/2016/11/19/dubbo之addShutdownHook/</id>
    <published>2016-11-19T13:46:17.000Z</published>
    <updated>2016-12-14T15:53:02.300Z</updated>
    
    <content type="html"><![CDATA[<h2 id="addShutdownHook-简单介绍"><a href="#addShutdownHook-简单介绍" class="headerlink" title="addShutdownHook 简单介绍"></a>addShutdownHook 简单介绍</h2><p>java.lang.Runtime.addShutdownHook(Thread hook) 方法注册一个新的虚拟机关闭挂钩。</p>
<p>该方法用来在jvm中增加一个关闭的钩子。当程序正常退出或者系统调用System.exit方法或虚拟机被关闭时就会执行添加的shutdownHook线程。<br>其中shutdownHook是一个已初始化但并不有启动的线程，当jvm关闭的时候，会执行系统中已经设置的所有通过方法addShutdownHook添加的钩子，当系统执行完这些钩子后，jvm才会关闭。所以可通过这些钩子在jvm关闭的时候进行内存清理、资源回收等工作</p>
<h3 id="简单例子"><a href="#简单例子" class="headerlink" title="简单例子"></a>简单例子</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">RuntimeDemo</span> </span>&#123;</div><div class="line"></div><div class="line">   <span class="comment">// a class that extends thread that is to be called when program is exiting</span></div><div class="line">   <span class="keyword">static</span> <span class="class"><span class="keyword">class</span> <span class="title">Message</span> <span class="keyword">extends</span> <span class="title">Thread</span> </span>&#123;</div><div class="line"></div><div class="line">      <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">         System.out.println(<span class="string">"Bye."</span>);</div><div class="line">      &#125;</div><div class="line">   &#125;</div><div class="line"></div><div class="line">   <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">      <span class="keyword">try</span> &#123;</div><div class="line"></div><div class="line">         <span class="comment">// register Message as shutdown hook</span></div><div class="line">         Runtime.getRuntime().addShutdownHook(<span class="keyword">new</span> Message());</div><div class="line"></div><div class="line">         <span class="comment">// print the state of the program</span></div><div class="line">         System.out.println(<span class="string">"Program is starting..."</span>);</div><div class="line"></div><div class="line">         <span class="comment">// cause thread to sleep for 3 seconds</span></div><div class="line">         System.out.println(<span class="string">"Waiting for 3 seconds..."</span>);</div><div class="line">         Thread.sleep(<span class="number">3000</span>);</div><div class="line"></div><div class="line">         <span class="comment">// print that the program is closing </span></div><div class="line">         System.out.println(<span class="string">"Program is closing..."</span>);</div><div class="line"></div><div class="line"></div><div class="line">      &#125; <span class="keyword">catch</span> (Exception e) &#123;</div><div class="line">         e.printStackTrace();</div><div class="line">      &#125;</div><div class="line">   &#125;</div><div class="line">&#125;</div></pre></td></tr></table></figure>
<h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h3><figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div></pre></td><td class="code"><pre><div class="line">Program is starting...</div><div class="line">Waiting for 3 seconds...</div><div class="line">Program is closing...</div><div class="line">Bye.</div></pre></td></tr></table></figure>
<h2 id="dubbo中使用的场景"><a href="#dubbo中使用的场景" class="headerlink" title="dubbo中使用的场景"></a>dubbo中使用的场景</h2><p>dubbo可以在非kill - 9或者发生故障时实现优雅退出<br><figure class="highlight java"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div><div class="line">10</div><div class="line">11</div><div class="line">12</div><div class="line">13</div><div class="line">14</div><div class="line">15</div><div class="line">16</div><div class="line">17</div><div class="line">18</div><div class="line">19</div><div class="line">20</div><div class="line">21</div><div class="line">22</div><div class="line">23</div><div class="line">24</div><div class="line">25</div><div class="line">26</div><div class="line">27</div><div class="line">28</div><div class="line">29</div><div class="line">30</div><div class="line">31</div><div class="line">32</div><div class="line">33</div><div class="line">34</div><div class="line">35</div><div class="line">36</div><div class="line">37</div><div class="line">38</div><div class="line">39</div><div class="line">40</div><div class="line">41</div><div class="line">42</div><div class="line">43</div><div class="line">44</div><div class="line">45</div><div class="line">46</div><div class="line">47</div><div class="line">48</div><div class="line">49</div><div class="line">50</div><div class="line">51</div></pre></td><td class="code"><pre><div class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String[] args)</span> </span>&#123;</div><div class="line">      <span class="keyword">try</span> &#123;</div><div class="line">          <span class="keyword">if</span> (args == <span class="keyword">null</span> || args.length == <span class="number">0</span>) &#123;</div><div class="line">              String config = ConfigUtils.getProperty(CONTAINER_KEY, loader.getDefaultExtensionName());</div><div class="line">              args = Constants.COMMA_SPLIT_PATTERN.split(config);</div><div class="line">          &#125;</div><div class="line">          </div><div class="line">          <span class="keyword">final</span> List&lt;Container&gt; containers = <span class="keyword">new</span> ArrayList&lt;Container&gt;();</div><div class="line">          <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">0</span>; i &lt; args.length; i ++) &#123;</div><div class="line">              containers.add(loader.getExtension(args[i]));</div><div class="line">          &#125;</div><div class="line">          logger.info(<span class="string">"Use container type("</span> + Arrays.toString(args) + <span class="string">") to run dubbo serivce."</span>);</div><div class="line">          </div><div class="line">          <span class="keyword">if</span> (<span class="string">"true"</span>.equals(System.getProperty(SHUTDOWN_HOOK_KEY))) &#123;</div><div class="line">            Runtime.getRuntime().addShutdownHook(<span class="keyword">new</span> Thread() &#123;</div><div class="line">                <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span> </span>&#123;</div><div class="line">                    <span class="keyword">for</span> (Container container : containers) &#123;</div><div class="line">                        <span class="keyword">try</span> &#123;</div><div class="line">                            container.stop();</div><div class="line">                            logger.info(<span class="string">"Dubbo "</span> + container.getClass().getSimpleName() + <span class="string">" stopped!"</span>);</div><div class="line">                        &#125; <span class="keyword">catch</span> (Throwable t) &#123;</div><div class="line">                            logger.error(t.getMessage(), t);</div><div class="line">                        &#125;</div><div class="line">                        <span class="keyword">synchronized</span> (Main.class) &#123;</div><div class="line">                            running = <span class="keyword">false</span>;</div><div class="line">                            Main.class.notify();</div><div class="line">                        &#125;</div><div class="line">                    &#125;</div><div class="line">                &#125;</div><div class="line">            &#125;);</div><div class="line">          &#125;</div><div class="line">          </div><div class="line">          <span class="keyword">for</span> (Container container : containers) &#123;</div><div class="line">              container.start();</div><div class="line">              logger.info(<span class="string">"Dubbo "</span> + container.getClass().getSimpleName() + <span class="string">" started!"</span>);</div><div class="line">          &#125;</div><div class="line">          System.out.println(<span class="keyword">new</span> SimpleDateFormat(<span class="string">"[yyyy-MM-dd HH:mm:ss]"</span>).format(<span class="keyword">new</span> Date()) + <span class="string">" Dubbo service server started!"</span>);</div><div class="line">      &#125; <span class="keyword">catch</span> (RuntimeException e) &#123;</div><div class="line">          e.printStackTrace();</div><div class="line">          logger.error(e.getMessage(), e);</div><div class="line">          System.exit(<span class="number">1</span>);</div><div class="line">      &#125;</div><div class="line">      <span class="keyword">synchronized</span> (Main.class) &#123;</div><div class="line">          <span class="keyword">while</span> (running) &#123;</div><div class="line">              <span class="keyword">try</span> &#123;</div><div class="line">                  Main.class.wait();</div><div class="line">              &#125; <span class="keyword">catch</span> (Throwable e) &#123;</div><div class="line">              &#125;</div><div class="line">          &#125;</div><div class="line">      &#125;</div><div class="line">  &#125;</div></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;addShutdownHook-简单介绍&quot;&gt;&lt;a href=&quot;#addShutdownHook-简单介绍&quot; class=&quot;headerlink&quot; title=&quot;addShutdownHook 简单介绍&quot;&gt;&lt;/a&gt;addShutdownHook 简单介绍&lt;/h2&gt;&lt;
    
    </summary>
    
      <category term="dubbo" scheme="http://yoursite.com/categories/dubbo/"/>
    
    
  </entry>
  
  <entry>
    <title>I love you</title>
    <link href="http://yoursite.com/2016/05/19/I-love-you/"/>
    <id>http://yoursite.com/2016/05/19/I-love-you/</id>
    <published>2016-05-18T16:43:03.000Z</published>
    <updated>2016-11-15T13:18:19.861Z</updated>
    
    <content type="html"><![CDATA[<h2 id="芝麻的文章"><a href="#芝麻的文章" class="headerlink" title="芝麻的文章"></a>芝麻的文章</h2><p>想和你一起坐火车去远行，<br>看着窗外陌生的风景慢悠悠的过，<br>还会有阳光斜斜的洒在你发间，<br>映着侧脸。</p>
<p>想和你并肩散步在昏黄的路灯下，<br>看着影子被灯光拉扯的佝偻又挺拔，<br>好像几步已一生，<br>光阴蔓延。</p>
<p>想和你躺在草地上一起看星星，<br>即使苍穹无边，也不用艳羡，<br>因为你已经是我的，<br>天地人间。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;芝麻的文章&quot;&gt;&lt;a href=&quot;#芝麻的文章&quot; class=&quot;headerlink&quot; title=&quot;芝麻的文章&quot;&gt;&lt;/a&gt;芝麻的文章&lt;/h2&gt;&lt;p&gt;想和你一起坐火车去远行，&lt;br&gt;看着窗外陌生的风景慢悠悠的过，&lt;br&gt;还会有阳光斜斜的洒在你发间，&lt;br&gt;映着侧脸。
    
    </summary>
    
      <category term="love" scheme="http://yoursite.com/categories/love/"/>
    
    
  </entry>
  
</feed>
